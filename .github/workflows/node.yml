name: Feature Branch CI/CD
 
on:
  push:
    branches:
      - master
 
jobs:
  deploy:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
 
      - name: Install dependencies
        run: |
          cd ./NodeSample
          npm install
 
      - name: Build Lambda package
        run: zip -r package.zip .
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_Region }}
 
      - name: Deploy to AWS Lambda
        run: |
          aws s3 cp package.zip s3://${{ secrets.S3_BUCKET_NAME }}/package.zip
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/package.zip package.zip
      - name: Update Lambda function code
        run: |
         aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --zip-file fileb://package.zip
         


      - name: Update dev alias
        run: |
          aws lambda update-alias --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --name dev --function-version \$LATEST
      
      - name: Wait for successful update
        id: wait_for_success
        run: |
          STATUS=""
          while [ "$STATUS" != "Successful" ]; do
            STATUS=$(aws lambda get-function-configuration --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --query 'LastUpdateStatus' --output text)
            echo "Current status: $STATUS"
            if [ "$STATUS" != "Successful" ]; then
              echo "Waiting for update to complete..."
              sleep 10  # Wait for 10 seconds before checking again
            fi
          done
          
      - name: Publish new version
        run: |
          NEW_VERSION=$(aws lambda publish-version --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --description "New prod version" --query 'Version' --output text)
          aws lambda update-alias --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --name prod --function-version $NEW_VERSION
            
