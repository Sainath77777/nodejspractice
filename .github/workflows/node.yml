name: Feature Branch CI/CD
 
on:
  push:
    branches:
      - master
 
jobs:
  deploy:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
 
      - name: Install dependencies
        run: |
          cd ./NodeSample
          npm install
 
      - name: Build Lambda package
        run: zip -r package.zip .
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_Region }}
 
      - name: Deploy to AWS Lambda
        run: |
          aws s3 cp package.zip s3://${{ secrets.S3_BUCKET_NAME }}/package.zip
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/package.zip package.zip
      - name: Update Lambda function code
        run: |
         aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --zip-file fileb://package.zip

      - name: Update dev alias
        run: |
          aws lambda update-alias --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --name dev --function-version \$LATEST
  
      - name: Publish new version
        id: publish
        run: |
          NEW_VERSION=$(aws lambda publish-version --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --description "New prod version" --query 'Version' --output text)
          echo "::set-output name=new_version::$NEW_VERSION"
  
      - name: Retry updating prod alias
        run: |
          RETRY_COUNT=0
          MAX_RETRIES=5
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            aws lambda update-alias --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --name prod --function-version ${{ steps.publish.outputs.new_version }} && break
            RETRY_COUNT=$((RETRY_COUNT+1))
            sleep 10  # Wait for 10 seconds before retrying
          done
  
            
